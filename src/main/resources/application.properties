# ===============================
# = DATA SOURCE
# ===============================



# Set here configurations for the database connection

# Connection url for the database "netgloo_blog"
spring.datasource.url = jdbc:postgresql://ec2-34-205-209-14.compute-1.amazonaws.com/d6e10mbked2ta5
# Username and password
spring.datasource.username = tyuajprfwqgdpz
spring.datasource.password = e4fa1f472ca07961ea19d1dc246851893231c1ab4710c51eeb73c451894f0330
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql = true



# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = update

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect


spring.mvc.view.prefix=/WEB-INF/views/
spring.mvc.view.suffix=.html


spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.security.SecurityAutoConfiguration